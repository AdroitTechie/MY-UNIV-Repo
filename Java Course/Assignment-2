/**
The formula for computing the number of ways of choosing ‘r’ different
things from a set of ‘n’ things is the define as C(n, r) = n!/(r! * (n – r)!).
Write a method, static double com(int n, int r) to find the value of the
C(n, r). This method further invokes a recursive method, static int fac(int
n). Here, method static int fac(int n) recursively finds factorial of a
number passed as an argument. Write the complete program.
*/

Import java.util.*;
class Main {
    static double com(int n, int r) {
        return fact(n) / (fact(r) *
            fact(n - r));
    }
    static int fact(int n) {
        int res = 1;
        for (int i = 2; i <= n; i++)
            res = res * i;
        return res;
    }
    public static void main(String[] args) {
        double n = 0, r = 0;
        Scanner in = new Scanner(System.in);
        double n = in .nextDouble();
        double r = in .nextDouble();
        System.out.println(com(n, r));
    }
}

/**
Write a program to find Pi value using following series (up-to
n terms) using method.
𝑝𝑖 = 4 − 43⁄ + 45⁄ − 47⁄ + 49⁄ − 411⁄+⋯
*/

import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.println("Enter number of terms");
        double i = input.nextDouble();
        double sum = 0;
        for (i = 0; i < 10000; i++) {
            if (i % 2 == 0)
                sum = sum + -1 / (2 * i - 1);
            else
                sum = sum + 1 / (2 * i - 1);
        }
        System.out.println(sum);
    }
}


